"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./components/ProgressBar.tsx":
/*!************************************!*\
  !*** ./components/ProgressBar.tsx ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ProgressBar: function() { return /* binding */ ProgressBar; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants */ \"./constants.ts\");\n\nvar _s = $RefreshSig$();\n\n\nconst ProgressBar = (param)=>{\n    let { percentage, engagementChangedVisualTrigger } = param;\n    _s();\n    const cappedPercentage = Math.max(0, Math.min(100, percentage));\n    const [isGlowing, setIsGlowing] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    let barColorClass = _constants__WEBPACK_IMPORTED_MODULE_2__.ENGAGEMENT_BAR_COLORS.medium;\n    if (cappedPercentage <= 33) {\n        barColorClass = _constants__WEBPACK_IMPORTED_MODULE_2__.ENGAGEMENT_BAR_COLORS.low;\n    } else if (cappedPercentage >= 67) {\n        barColorClass = _constants__WEBPACK_IMPORTED_MODULE_2__.ENGAGEMENT_BAR_COLORS.high;\n    }\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        // Only trigger glow if it's not the initial state (trigger > 0)\n        // and the percentage has actually changed to avoid glow on initial load with default engagement.\n        if (engagementChangedVisualTrigger > 0) {\n            setIsGlowing(true);\n            const timer = setTimeout(()=>setIsGlowing(false), 1500); // Match animation duration\n            return ()=>clearTimeout(timer);\n        }\n    }, [\n        engagementChangedVisualTrigger\n    ]); // Depend on the trigger\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"w-full bg-slate-700 rounded-full h-4 shadow-inner overflow-hidden relative \".concat(isGlowing ? \"animate-progress-glow\" : \"\"),\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"h-full rounded-full \".concat(barColorClass, \" transition-all duration-700 ease-out\"),\n            style: {\n                width: \"\".concat(cappedPercentage, \"%\")\n            },\n            role: \"progressbar\",\n            \"aria-valuenow\": cappedPercentage,\n            \"aria-valuemin\": 0,\n            \"aria-valuemax\": 100\n        }, void 0, false, {\n            fileName: \"/Users/sam/Documents/repositories/SosheIQ/components/ProgressBar.tsx\",\n            lineNumber: 38,\n            columnNumber: 4\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"/Users/sam/Documents/repositories/SosheIQ/components/ProgressBar.tsx\",\n        lineNumber: 34,\n        columnNumber: 3\n    }, undefined);\n};\n_s(ProgressBar, \"jMJUf24PppMzHi+2cD+/s1Q0Phk=\");\n_c = ProgressBar;\nvar _c;\n$RefreshReg$(_c, \"ProgressBar\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL1Byb2dyZXNzQmFyLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFtRDtBQUNFO0FBTzlDLE1BQU1JLGNBQTBDO1FBQUMsRUFDdkRDLFVBQVUsRUFDVkMsOEJBQThCLEVBQzlCOztJQUNBLE1BQU1DLG1CQUFtQkMsS0FBS0MsR0FBRyxDQUFDLEdBQUdELEtBQUtFLEdBQUcsQ0FBQyxLQUFLTDtJQUNuRCxNQUFNLENBQUNNLFdBQVdDLGFBQWEsR0FBR1gsK0NBQVFBLENBQUM7SUFFM0MsSUFBSVksZ0JBQWdCViw2REFBcUJBLENBQUNXLE1BQU07SUFDaEQsSUFBSVAsb0JBQW9CLElBQUk7UUFDM0JNLGdCQUFnQlYsNkRBQXFCQSxDQUFDWSxHQUFHO0lBQzFDLE9BQU8sSUFBSVIsb0JBQW9CLElBQUk7UUFDbENNLGdCQUFnQlYsNkRBQXFCQSxDQUFDYSxJQUFJO0lBQzNDO0lBRUFkLGdEQUFTQSxDQUFDO1FBQ1QsZ0VBQWdFO1FBQ2hFLGlHQUFpRztRQUNqRyxJQUFJSSxpQ0FBaUMsR0FBRztZQUN2Q00sYUFBYTtZQUNiLE1BQU1LLFFBQVFDLFdBQVcsSUFBTU4sYUFBYSxRQUFRLE9BQU8sMkJBQTJCO1lBQ3RGLE9BQU8sSUFBTU8sYUFBYUY7UUFDM0I7SUFDRCxHQUFHO1FBQUNYO0tBQStCLEdBQUcsd0JBQXdCO0lBRTlELHFCQUNDLDhEQUFDYztRQUNBQyxXQUFXLDhFQUVWLE9BREFWLFlBQVksMEJBQTBCO2tCQUV2Qyw0RUFBQ1M7WUFDQUMsV0FBVyx1QkFBcUMsT0FBZFIsZUFBYztZQUNoRFMsT0FBTztnQkFBRUMsT0FBTyxHQUFvQixPQUFqQmhCLGtCQUFpQjtZQUFHO1lBQ3ZDaUIsTUFBSztZQUNMQyxpQkFBZWxCO1lBQ2ZtQixpQkFBZTtZQUNmQyxpQkFBZTs7Ozs7Ozs7Ozs7QUFJbkIsRUFBRTtHQXZDV3ZCO0tBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2NvbXBvbmVudHMvUHJvZ3Jlc3NCYXIudHN4PzhmZjkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IEVOR0FHRU1FTlRfQkFSX0NPTE9SUyB9IGZyb20gXCIuLi9jb25zdGFudHNcIjtcblxuaW50ZXJmYWNlIFByb2dyZXNzQmFyUHJvcHMge1xuXHRwZXJjZW50YWdlOiBudW1iZXI7XG5cdGVuZ2FnZW1lbnRDaGFuZ2VkVmlzdWFsVHJpZ2dlcjogbnVtYmVyO1xufVxuXG5leHBvcnQgY29uc3QgUHJvZ3Jlc3NCYXI6IFJlYWN0LkZDPFByb2dyZXNzQmFyUHJvcHM+ID0gKHtcblx0cGVyY2VudGFnZSxcblx0ZW5nYWdlbWVudENoYW5nZWRWaXN1YWxUcmlnZ2VyLFxufSkgPT4ge1xuXHRjb25zdCBjYXBwZWRQZXJjZW50YWdlID0gTWF0aC5tYXgoMCwgTWF0aC5taW4oMTAwLCBwZXJjZW50YWdlKSk7XG5cdGNvbnN0IFtpc0dsb3dpbmcsIHNldElzR2xvd2luZ10gPSB1c2VTdGF0ZShmYWxzZSk7XG5cblx0bGV0IGJhckNvbG9yQ2xhc3MgPSBFTkdBR0VNRU5UX0JBUl9DT0xPUlMubWVkaXVtO1xuXHRpZiAoY2FwcGVkUGVyY2VudGFnZSA8PSAzMykge1xuXHRcdGJhckNvbG9yQ2xhc3MgPSBFTkdBR0VNRU5UX0JBUl9DT0xPUlMubG93O1xuXHR9IGVsc2UgaWYgKGNhcHBlZFBlcmNlbnRhZ2UgPj0gNjcpIHtcblx0XHRiYXJDb2xvckNsYXNzID0gRU5HQUdFTUVOVF9CQVJfQ09MT1JTLmhpZ2g7XG5cdH1cblxuXHR1c2VFZmZlY3QoKCkgPT4ge1xuXHRcdC8vIE9ubHkgdHJpZ2dlciBnbG93IGlmIGl0J3Mgbm90IHRoZSBpbml0aWFsIHN0YXRlICh0cmlnZ2VyID4gMClcblx0XHQvLyBhbmQgdGhlIHBlcmNlbnRhZ2UgaGFzIGFjdHVhbGx5IGNoYW5nZWQgdG8gYXZvaWQgZ2xvdyBvbiBpbml0aWFsIGxvYWQgd2l0aCBkZWZhdWx0IGVuZ2FnZW1lbnQuXG5cdFx0aWYgKGVuZ2FnZW1lbnRDaGFuZ2VkVmlzdWFsVHJpZ2dlciA+IDApIHtcblx0XHRcdHNldElzR2xvd2luZyh0cnVlKTtcblx0XHRcdGNvbnN0IHRpbWVyID0gc2V0VGltZW91dCgoKSA9PiBzZXRJc0dsb3dpbmcoZmFsc2UpLCAxNTAwKTsgLy8gTWF0Y2ggYW5pbWF0aW9uIGR1cmF0aW9uXG5cdFx0XHRyZXR1cm4gKCkgPT4gY2xlYXJUaW1lb3V0KHRpbWVyKTtcblx0XHR9XG5cdH0sIFtlbmdhZ2VtZW50Q2hhbmdlZFZpc3VhbFRyaWdnZXJdKTsgLy8gRGVwZW5kIG9uIHRoZSB0cmlnZ2VyXG5cblx0cmV0dXJuIChcblx0XHQ8ZGl2XG5cdFx0XHRjbGFzc05hbWU9e2B3LWZ1bGwgYmctc2xhdGUtNzAwIHJvdW5kZWQtZnVsbCBoLTQgc2hhZG93LWlubmVyIG92ZXJmbG93LWhpZGRlbiByZWxhdGl2ZSAke1xuXHRcdFx0XHRpc0dsb3dpbmcgPyBcImFuaW1hdGUtcHJvZ3Jlc3MtZ2xvd1wiIDogXCJcIlxuXHRcdFx0fWB9PlxuXHRcdFx0PGRpdlxuXHRcdFx0XHRjbGFzc05hbWU9e2BoLWZ1bGwgcm91bmRlZC1mdWxsICR7YmFyQ29sb3JDbGFzc30gdHJhbnNpdGlvbi1hbGwgZHVyYXRpb24tNzAwIGVhc2Utb3V0YH1cblx0XHRcdFx0c3R5bGU9e3sgd2lkdGg6IGAke2NhcHBlZFBlcmNlbnRhZ2V9JWAgfX1cblx0XHRcdFx0cm9sZT1cInByb2dyZXNzYmFyXCJcblx0XHRcdFx0YXJpYS12YWx1ZW5vdz17Y2FwcGVkUGVyY2VudGFnZX1cblx0XHRcdFx0YXJpYS12YWx1ZW1pbj17MH1cblx0XHRcdFx0YXJpYS12YWx1ZW1heD17MTAwfVxuXHRcdFx0Lz5cblx0XHQ8L2Rpdj5cblx0KTtcbn07XG4iXSwibmFtZXMiOlsiUmVhY3QiLCJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsIkVOR0FHRU1FTlRfQkFSX0NPTE9SUyIsIlByb2dyZXNzQmFyIiwicGVyY2VudGFnZSIsImVuZ2FnZW1lbnRDaGFuZ2VkVmlzdWFsVHJpZ2dlciIsImNhcHBlZFBlcmNlbnRhZ2UiLCJNYXRoIiwibWF4IiwibWluIiwiaXNHbG93aW5nIiwic2V0SXNHbG93aW5nIiwiYmFyQ29sb3JDbGFzcyIsIm1lZGl1bSIsImxvdyIsImhpZ2giLCJ0aW1lciIsInNldFRpbWVvdXQiLCJjbGVhclRpbWVvdXQiLCJkaXYiLCJjbGFzc05hbWUiLCJzdHlsZSIsIndpZHRoIiwicm9sZSIsImFyaWEtdmFsdWVub3ciLCJhcmlhLXZhbHVlbWluIiwiYXJpYS12YWx1ZW1heCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./components/ProgressBar.tsx\n"));

/***/ })

});